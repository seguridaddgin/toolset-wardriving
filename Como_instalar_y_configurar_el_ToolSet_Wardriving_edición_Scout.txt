===========================0==================================
Como instalar y configurar el SetTool Wardrining edición Scout
==============================================================

Este documento describe la instalación y configuración del SetTool Wardriving edición Scout (STWeS), utilizando como sistema operativo raspbian más aplicaciones como gpsd y kismet.

Instalación y configuración de raspbian en la raspberry pi zero 2
=================================================================

Actualizar la lista de paquetes en raspbian
-------------------------------------------
# apt-get update

Listar los paquetes actualizables en el sistema raspbian
--------------------------------------------------------
# apt list --upgradable

Actualizar los paquetes en el sistema raspbian
----------------------------------------------
# apt-get upgrade

Configurar el sistema raspbian desde la utilidad raspi-config
-------------------------------------------------------------
# raspi-config

Instalar y configurar gpsd
==========================

Remover una instalación anterior
--------------------------------
# apt-get remove gpsd

Purgar archivos de una configuración anterior
---------------------------------------------
# apt-get purge gpsd

Instalar el paquete gpsd
------------------------
# apt-get install gpsd

Parar el servicio gpsd
----------------------
# systemctl stop gpsd

Parar el servicio gpsd socket
-----------------------------
# systemctl stop gpsd.socket

Iniciar el servicio gpsd socket
-------------------------------
# systemctl start gpsd.socket

Activar el servicio gps.socket
------------------------------
# systemctl enable gpsd.socket

Editar el archivo configuración de gpsd
---------------------------------------
# vi /etc/default/gpsd

Agregar una linea para las opciones del servicio gpsd
-----------------------------------------------------
OPTIONS="udp://*:9999"

Establecer en false la activación automática de dispositivos USB
----------------------------------------------------------------
USBAUTO="false"

Reiniciar el servicio gpsd socket
---------------------------------
systemctl restart gpsd.socket

Visualizar el estado de gpsd socket
-----------------------------------
# systemctl status gpsd.socket

Instalar y configurar kismet
============================

Agregar la llave del repositorio oficial de kismet
--------------------------------------------------
wget -O - https://www.kismetwireless.net/repos/kismet-release.gpg.key --quiet | gpg --dearmor | sudo tee /usr/share/keyrings/kismet-archive-keyring.gpg >/dev/null

Agregar el repositorio de kismet en las fuentes de apt
------------------------------------------------------
echo 'deb [signed-by=/usr/share/keyrings/kismet-archive-keyring.gpg] https://www.kismetwireless.net/repos/apt/release/bookworm bookworm main' | sudo tee /etc/apt/sources.list.d/kismet.list >/dev/null

Actualizar la lista de paquetes en raspbian
-------------------------------------------
# apt-get update

Instalar kismet
---------------
# apt-get install ksimet

Editar o crear el archivo de configuración kismet_site.conf
-----------------------------------------------------------
# vi /etc/ksimet/kismet_site.conf

Agregar en la configuración la fuente geoposicionamiento
--------------------------------------------------------
gps=gpsd:host=localhost,port=2947

Agregar la fuente de datos para relevar las redes inalámbricas
--------------------------------------------------------------
source=wlan1:channels="1,2,3,4,5,6,7,8,9,10,11,12,13",name=wlan1,type=linuxwifi

Editar el archivo de configuración kismet_logging.conf
------------------------------------------------------
# vi /etc/kismet/kismet_logging.conf

Agregar el lugar de almacenamiento de las capturas de datos
-----------------------------------------------------------
log_prefix=/home/lasi/kismet

Agregar el formato de los archivos de captura de datos
------------------------------------------------------
log_template=%p/%n.%l

Crear el directorio de almacenamiento de las capturas para kismet
-----------------------------------------------------------------
# mkdir /home/lasi/kismet

Modificar el propietario y el grupo propietario del directorio
--------------------------------------------------------------
# chown -R lasi:lasi /home/lasi/kismet

Configurar el sistema operativo raspbian para comandar la captura de kismet
===========================================================================

Agregar un usuario comenzar para iniciar la captura de paquetes con kismet
--------------------------------------------------------------------------
# adduser comenzar

Agregar el usuario comenzar al grupo sudo
-----------------------------------------
# usermod -aG sudo comenzar

Modificar el archivo .bashrc para ejecutar el comando que inicia kismet
------------------------------------------------------------------------
# vi /home/comenzar/.bashrc

Agregar el comando en el archivo .bashrc
----------------------------------------
kismet --log-debug 2>&1 -t "Kismet_$(date +'%d-%m-%Y_%H-%M-%S')_%i" &

Agregar un usuario detener para frenar la captura de paquetes con kismet
------------------------------------------------------------------------
# adduser detener

Agregar el usuario detener al grupo sudo
----------------------------------------
# usermod -aG sudo detener

Modificar el archivo .bashrc para ejecutar el comando que detiene kismet
------------------------------------------------------------------------
# vi /home/detener/.bashrc

Agregar el comando en el archivo .bashrc
----------------------------------------
sudo pkill kismet

Agregar un usuario de nombre reiniciar para bajar e iniciar kismet
------------------------------------------------------------------
# adduser reiniciar

Agregar el usuario reinciar al grupo sudo
-----------------------------------------
# usermod -aG sudo reiniciar

Modificar el archivo .bashrc para ejecutar el comando que detiene e inicia kismet
---------------------------------------------------------------------------------
# vi /home/reiniciar/.bashrc

Agregar los comandos en el archivo .bashrc
------------------------------------------
sudo pkill kismet
echo "Reiniciando kismet ..."
sleep 10
kismet --log-debug 2>&1 -t "Kismet_$(date +'%d-%m-%Y_%H-%M-%S')_%i" &

Agregar un usuario de nombre estado para visualizar el estado de kismet
-----------------------------------------------------------------------
# adduser estado

Agregar el usuario estado al grupo de usuario sudo
--------------------------------------------------
# usermod -aG sudo estado

Modificar el archivo .bashrc para ejecutar el comando que muestra el estado de ejecución de kismet
--------------------------------------------------------------------------------------------------
# vi /home/estado/.bashrc

Agregar los comandos en el archivo .bashrc
------------------------------------------
if pidof kismet > /dev/null
then
    echo "Kismet está en ejecución"
else
    echo "Kismet no se encuentra en ejecución"
fi
echo "Presione una tecla para salir ..."
read -n 1 -s -r
exit

Agregar un usuario de nombre apagar para bajar el sistema raspbian
------------------------------------------------------------------
# adduser apagar

Agregar el usuario apagar al grupo de usuario sudo
--------------------------------------------------
# usermod -aG sudo apagar

Modificar el archivo .bashrc para ejecutar el comando que apaga el sistema raspbian
-----------------------------------------------------------------------------------
# vi /home/apagar/.bashrc

Agregar el comando en el archivo .bashrc
----------------------------------------
sudo shutdown now

Crear el archivo rc.local
-------------------------
# touch /etc/rc.local

Editar el archivo rc.local, para agregar iniciar automaticamente la captura de redes inalámbricas
-------------------------------------------------------------------------------------------------
#!/bin/bash
# rc.local

# Registro de inicio de rc.local
echo "Arrancando rc.local ..." > /var/log/rc.local.log

# Iniciar kismet para relevar redes inalámbricas
kismet --log-debug 2>&1 -t "Kismet_$(date +'%d-%m-%Y_%H-%M-%S')_%i" &

exit 0

Aplicar permiso de ejecución al script rc.local
-----------------------------------------------
# chmod ugo+x /etc/rc.local

Crear el archivo de unidad para el servicio systemd
---------------------------------------------------
# nano /etc/systemd/system/rc-local.service

Modificar el archivo de unidad para rc.local
--------------------------------------------
[Unit]
Description=/etc/rc.local Compatibility
ConditionPathExists=/etc/rc.local
After=network.target

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target

Recargar systemd
----------------
# systemctl daemon-reload

Habilitar el servicio rc.local
------------------------------
# systemctl enable rc-local

Iniciar el servicio rc.local
----------------------------
# systemctl start rc-local

Visualizar el estado de rc.local
--------------------------------
# systemctl status rc-local

Reiniciar el sistema para iniciar la captura de redes inalámbricas
------------------------------------------------------------------
# reboot
